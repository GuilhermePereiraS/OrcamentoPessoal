version: '3.8'

services:

  postgres:
    image: postgres:18.0
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: porquinhoProjeto
    ports:
      - "5433:5432"
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d 
      - pgdata:/var/lib/postgresql
    networks:
      - rede_postgres

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - rede_postgres

  # --- Serviço de Backend (Spring Boot + Thymeleaf em modo Dev) ---
  backend:
    # Usamos a imagem do Maven que já tem Java 21
    image: maven:3.9-eclipse-temurin-21 
    container_name: porquinho-backend-dev
    working_dir: /app
    # Mapeamos TODO o projeto para /app no contêiner
    volumes:
      - .:/app
      # Adicionamos um volume "anônimo" para o cache do Maven, para acelerar builds
      - maven-cache:/root/.m2 
    # Comando para rodar o Spring Boot em modo "dev"
    # Ele vai assistir por mudanças nos arquivos Java
    command: ./mvnw spring-boot:run
    ports:
      - "8080:8080"
    networks:
      - rede_postgres
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/porquinhoProjeto
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      # Habilita o "live reload" do Spring Boot DevTools
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      # Habilita o LIVE RELOAD (para mudanças em static/templates)
      - SPRING_DEVTOOLS_LIVERELOAD_ENABLED=true
    restart: unless-stopped

networks:
  rede_postgres:
    driver: bridge

volumes:
  pgdata:
  maven-cache:
