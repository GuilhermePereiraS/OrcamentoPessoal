version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring_app
    ports:
      - "8080:8080"
    volumes:
      - ./:/app
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/porquinhoProjeto
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - spring_net

  postgres:
    image: postgres:18.0
    container_name: spring_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: porquinhoProjeto
    ports:
      - "5433:5432"
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d porquinhoProjeto"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - spring_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - spring_net

networks:
  spring_net:
    driver: bridge

volumes:
  postgres_data:
